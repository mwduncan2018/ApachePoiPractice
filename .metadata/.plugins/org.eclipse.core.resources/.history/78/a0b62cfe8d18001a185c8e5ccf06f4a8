package com.duncan.apachepoipractice;

import static org.junit.jupiter.api.Assertions.*;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.Borders;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.junit.jupiter.api.Test;

import com.duncan.apachepoipractice.utilities.SimpleWord;

public class Practice1 {
	private String LOREM_IPSUM = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";

	@Test
	void demo01_writeDocxToFile() throws IOException {
		XWPFDocument document = new XWPFDocument();
		FileOutputStream out = new FileOutputStream(
				new File("src/test/resources/officialReports/demo01_writeDocxToFile.docx"));
		document.write(out);
		out.close();
	}

	@Test
	void demo02_writeParagraph() throws IOException {
		XWPFDocument doc = new XWPFDocument();
		FileOutputStream out = new FileOutputStream(
				new File("src/test/resources/officialReports/demo02_writeParagraph.docx"));

		XWPFParagraph par = doc.createParagraph();
		XWPFRun run = par.createRun();
		run.setText("Hey, I'm writing to a Word document!");

		doc.write(out);
		out.close();
	}

	@Test
	// Does not work!
	void demo03_applyBorder() throws IOException {
		XWPFDocument doc = new XWPFDocument();
		FileOutputStream out = new FileOutputStream(
				new File("src/test/resources/officialReports/demo03_applyBorder.docx"));

		XWPFParagraph par = doc.createParagraph();
		par.setBorderBottom(Borders.BASIC_BLACK_DASHES);
		par.setBorderTop(Borders.BASIC_BLACK_DASHES);
		par.setBorderLeft(Borders.BASIC_BLACK_DASHES);
		par.setBorderRight(Borders.BASIC_BLACK_DASHES);

		XWPFRun run = par.createRun();
		run.setText(LOREM_IPSUM);

		doc.write(out);
		out.close();
	}
	
	@Test
	void demo04_createTable() throws IOException {
		XWPFDocument doc = new XWPFDocument();
		FileOutputStream out = new FileOutputStream(
				new File("src/test/resources/officialReports/demo04_createTable.docx"));

		XWPFParagraph par = doc.createParagraph();
		XWPFRun run = par.createRun();
		run.setText(LOREM_IPSUM);
		
		// Create table
		XWPFTable table = doc.createTable();
		
		// First row
		XWPFTableRow tableRow1 = table.getRow(0);
		tableRow1.getCell(0).setText("col one, row one");
		tableRow1.addNewTableCell().setText("col two, row one");
		tableRow1.addNewTableCell().setText("col three, row one");

		// Second row
		XWPFTableRow tableRow2 = table.createRow();
		tableRow2.getCell(0).setText("col one, row two");
		tableRow2.getCell(1).setText("col two, row two");
		tableRow2.getCell(2).setText("col three, row two");
		
		// Third row
		XWPFTableRow tableRow3 = table.createRow();
		tableRow3.getCell(0).setText("col one, row three");
		tableRow3.getCell(1).setText("col two, row three");
		tableRow3.getCell(2).setText("col three, row three");

		doc.write(out);
		out.close();
	}
	
	@Test
	void demo05_fontAlignment() throws IOException {
		XWPFDocument doc = new XWPFDocument();
		FileOutputStream out = new FileOutputStream(
				new File("src/test/resources/officialReports/demo05_fontAlignment.docx"));

		// Create the title bold, italic, and centered
		XWPFParagraph heading = doc.createParagraph();
		heading.setAlignment(ParagraphAlignment.CENTER);
		XWPFRun run = heading.createRun();
		run.setBold(true);
		run.setItalic(true);
		run.setText("LORUM IPSUM");
		run.addBreak();
		
		// Create the paragraph
		XWPFParagraph par = doc.createParagraph();
		run = par.createRun();
		run.setText(LOREM_IPSUM);
		run.addBreak();
		
		// Create table
		XWPFTable table = doc.createTable();
		
		// First row
		XWPFTableRow tableRow1 = table.getRow(0);
		tableRow1.getCell(0).setText("col one, row one");
		tableRow1.addNewTableCell().setText("col two, row one");
		tableRow1.addNewTableCell().setText("col three, row one");
		

		// Second row
		XWPFTableRow tableRow2 = table.createRow();
		tableRow2.getCell(0).setText("col one, row two");
		tableRow2.getCell(1).setText("col two, row two");
		tableRow2.getCell(2).setText("col three, row two");
		
		// Third row
		XWPFTableRow tableRow3 = table.createRow();
		tableRow3.getCell(0).setText("col one, row three");
		tableRow3.getCell(1).setText("col two, row three");
		XWPFTableCell cell33 = tableRow3.getCell(2);
		cell33.setText("col three, row three");
		cell33.setColor("ff0000");
		

		doc.write(out);
		out.close();
	}
	
	@Test
	@Ignore
	void demo06_extractText() throws IOException {
		System.out.println("------------------------------------------------------------------------------");
		System.out.println("File: demo06_fontAlignment.docx");
		FileInputStream input = new FileInputStream(
				new File("src/test/resources/officialReports/demo05_fontAlignment.docx"));
		XWPFDocument doc = new XWPFDocument(input);
		XWPFWordExtractor extract = new XWPFWordExtractor(doc);
		System.out.println(extract.getText());
		extract.close();		
		System.out.println("------------------------------------------------------------------------------");
	}
		
	
	

}
